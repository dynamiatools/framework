<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2023 Dynamia Soluciones IT S.A.S - NIT 900302344-1
  ~ Colombia / South America
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<zk>
    <config-name>DynamiaToolsZK</config-name>


    <listener>
        <description>ThreadLocal Synchronization Listener</description>
        <listener-class>org.zkoss.zkplus.util.ThreadLocalListener</listener-class>
    </listener>

    <listener>
        <description>Spring JPA Open Persistence in view</description>
        <listener-class>tools.dynamia.zk.ZKOpenPersistenceInViewListener</listener-class>
    </listener>

    <listener>
        <description>WebSocket Listerner Helper</description>
        <listener-class>tools.dynamia.zk.websocket.WebSocketDesktopListener</listener-class>
    </listener>

    <listener>
        <description>Delegate calls to DesktopListener</description>
        <listener-class>tools.dynamia.zk.DesktopInitListenerDelegator</listener-class>
    </listener>

    <listener>
        <description>Delegate calls to ComposerListener</description>
        <listener-class>tools.dynamia.zk.ComposerListenerDelegator</listener-class>
    </listener>


    <preference>
        <name>ThreadLocal</name>
        <value>
            org.springframework.transaction.support.TransactionSynchronizationManager=resources,synchronizations,currentTransactionName,currentTransactionReadOnly,actualTransactionActive;
            org.springframework.web.context.request.RequestContextHolder=requestAttributesHolder,inheritableRequestAttributesHolder;
            org.springframework.security.core.context.ThreadLocalSecurityContextHolderStrategy=contextHolder;
        </value>
    </preference>


    <system-config>
        <ui-factory-class>tools.dynamia.zk.ui.ExtensibleSerializableUiFactory</ui-factory-class>
        <id-generator-class>tools.dynamia.zk.UniqueDesktopIdGenerator</id-generator-class>
    </system-config>

    <session-config>
        <device-type>ajax</device-type>
        <automatic-timeout/> <!-- the same as <automatic-timeout>true</automatic-timeout> -->
        <timeout-uri>/</timeout-uri>
        <timer-keep-alive>true</timer-keep-alive>
    </session-config>

    <library-property>
        <name>org.zkoss.zk.ui.invokeFirstRootForAfterKeyDown.enabled</name>
        <value>true</value>
    </library-property>

</zk>
